[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "ensysmod"
version = "0.0.4"
authors = [
    { name = "NOWUM-Energy - FH Aachen", email = "nowum-energy@fh-aachen.de" },
]
description = "Just another energy system modeling tool made by Institut NOWUM-Energy - FH Aachen"
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

dependencies = [
    "fastapi[all]>=0.109.0",
    "sqlalchemy>=2.0.25",
    "uvicorn>=0.27.0",
    "pydantic>=2.6.0",
    "pydantic-settings>=2.1.0",
    "python-jose>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    # dependencies for FINE:
    "geopandas>=0.14.3",
    "openpyxl>=3.1.2",
    "matplotlib>=3.8.2",
    "xlrd>=2.0.1",
    "pyomo>=6.7.0",
    "numpy>=1.26.3",
    "pandas>=2.2.0",
    "networkx>=3.2.1",
    "scipy>=1.12.0",
    "scikit-learn>=1.4.0",
    "xarray>=2024.1.1",
    "rasterio>=1.3.9",
    "netcdf4>=1.6.5",
    "tsam>=2.3.1",
    "pwlf>=2.2.1",
    "psutil>=5.9.8",
    "gurobi-logtools>=3.0.0",
    "FINE>=2.3.3",
]

[project.optional-dependencies]
test = [
    "pytest>=8.0.0",
    "pytest-cov>= 4.1.0",
    "sphinx>=7.2.6",
    "sphinx-rtd-theme>=2.0.0",
    "sphinxcontrib-openapi>=0.8.3",
    "autodoc_pydantic>=2.0.1",
    "ruff>=0.2.0",
]


[project.urls]
"Homepage" = "https://github.com/NOWUM/EnSysMod"
"Bug Tracker" = "https://github.com/NOWUM/EnSysMod/issues"

[tool.setuptools.packages.find]
where = ["ensysmod"]

[tool.pytest]
testpaths = "tests"

[tool.pytest.ini_options]
addopts = ["--strict-markers", "--doctest-modules", "--durations=10"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "require_solver: marks tests that require solver to be installed (deselect with '-m \"not require_solver\"')",
]

[tool.coverage.report]
omit = ["ensysmod/__main__.py"]
exclude_lines = [
    "if __name__ == .__main__.:",
    "pragma: no-cover",
    "if TYPE_CHECKING:",
]
skip_covered = true
skip_empty = true

[tool.ruff]
include = ["ensysmod/**/*.py", "tests/**/*.py"]

line-length = 150
target-version = "py311"

[tool.ruff.lint]
select = ["ALL"]
ignore = ["N", "D", "ANN", "S", "BLE", "A", "EM", "TD", "FIX", "PL", "TRY"]

# conflicting lint rules: https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
extend-ignore = [
    "W191",
    "E111",
    "E114",
    "E117",
    "D206",
    "D300",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "COM812",
    "COM819",
    "ISC001",
    "ISC002",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
    "I001", # allow unsorted imports in __init__.py
    "F401", # allow unused imports in __init__.py
]
"tests/*" = [
    "S101", # allow assert statements for pytest
    "ARG",  # allow unused arguments for pytest fixtures
]
"ensysmod/api/endpoints/*" = [
    "B008", # allow function calls (Depends, File) in API endpoints
]
