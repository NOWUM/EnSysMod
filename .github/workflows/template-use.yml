# This workflow runs, if this repo is used as template

name: Template Cleanup

on:
  push:
    branches:
      - main
  
jobs:
  # Inspect the information that is accessible in each context
  # https://docs.github.com/en/actions/learn-github-actions/contexts#example-printing-context-information-to-the-log-file
  # You can delete this section
  jobinfo:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJSON(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJSON(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJSON(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJSON(matrix) }}
        run: echo "$MATRIX_CONTEXT"
     
  cleanup:
    runs-on: ubuntu-latest
    if: github.event.repository.name != 'python-starter'
    name: "Cleanup & Prepare repository"
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Prepare files
        run: |
          # Prepare variables
          NAME="${GITHUB_REPOSITORY##*/}"
          ACTOR=$(echo $GITHUB_ACTOR | tr '[:upper:]' '[:lower:]')
          SAFE_NAME=$(echo $NAME | sed 's/[^a-zA-Z0-9]//g' | tr '[:upper:]' '[:lower:]')
          SAFE_ACTOR=$(echo $ACTOR | sed 's/[^a-zA-Z0-9]//g' | tr '[:upper:]' '[:lower:]')
          
          # Replace placeholders in the template files
          find .github/template/ -type f -exec sed -i "s/%NAME%/$NAME/g" {} +
          find .github/template/ -type f -exec sed -i "s/%SAFE_NAME%/$SAFE_NAME/g" {} +
          find .github/template/ -type f -exec sed -i "s/%ACTOR%/$ACTOR/g" {} +
          find .github/template/ -type f -exec sed -i "s/%REPOSITORY%/${GITHUB_REPOSITORY/\//\\/}/g" {} +
          find .github/template/ -type f -exec sed -i "s/counter/$SAFE_NAME/g" {} +

          # Replace variables within example python project
          find counter -type f -exec sed -i "s/%NAME%/$NAME/g" {} +
          find counter -type f -exec sed -i "s/counter/$SAFE_NAME/g" {} +
          find counter -type f -exec sed -i "s/V3lop5/$ACTOR/g" {} +

          # Rename project folder
          mv counter $SAFE_NAME
          
          # Move contents
          cp -R .github/template/* .

          # Update github workflows
          sed -i "s/counter/$SAFE_NAME/g" .github/workflows/*

          # Update tests
          find tests -type f -exec sed -i "s/counter/$SAFE_NAME/g" {} +
          find tests -type f -exec sed -i "s/Counter/$SAFE_NAME/g" {} +

          # Update scripts
          sed -i "s/counter/$SAFE_NAME/g" scripts/*

          # Update requirements
          sed -i "s/Counter/$NAME/g" requirements*.txt

          # Update first issue body
          sed -i "s/%REPOSITORY%/${GITHUB_REPOSITORY/\//\\/}/g" .github/FIRST_ISSUE.md

      - name: Create Issue
        uses: peter-evans/create-issue-from-file@v3
        with:
          title: "Complete repository setup"
          content-filepath: ./.github/FIRST_ISSUE.md

      - name: Remove template files
        run: |
          rm -rf \
            .github/template \
            .github/workflows/template-use.yml \
            .github/FIRST_ISSUE.md \
            LICENSE

      - name: Commit files
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .
          git commit -m "Completed project setup"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          branch: main
          github_token: ${{ github.token }}


  branch_gh_pages:
    name: "Create gh-pages branch"
    runs-on: ubuntu-latest
    if: github.event.repository.name != 'python-starter'

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Prepare files
        run: |
          git checkout --orphan gh-pages
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit --allow-empty -m "Create gh-pages branch"
          git push origin gh-pages